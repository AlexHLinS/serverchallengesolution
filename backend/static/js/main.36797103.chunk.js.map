{"version":3,"sources":["components/header/header.tsx","components/base-layout/base-layout.tsx","api/client.ts","api/api.ts","hooks/useFetch.ts","components/add-item-form/add-item-form.tsx","components/suppliers-list/suppliers-list.tsx","components/settings/settings.tsx","pages/Dashboard/Dashboard.tsx","App.tsx","index.tsx"],"names":["Header","className","BaseLayout","axiosInstance","axios","create","baseURL","timeout","client","get","delete","post","put","patch","request","getItems","searchItem","search","getSuppliersByItemId","id","params","item","useFetch","fetchMethod","initialParams","forceStart","useState","updateParams","isLoading","setIsLoading","data","setData","hasError","setHasError","isDone","setIsDone","errorMessage","setErrorMessage","refetchIndex","setRefetchIndex","refetch","prevRefetchIndex","fetch","useCallback","restParams","then","response","status","catch","err","message","finally","useEffect","AddItemForm","onSubmit","loading","setSearch","handleChange","event","target","value","handleSubmit","dir","onFinish","onChange","placeholder","type","icon","SearchOutlined","htmlType","SuppliersList","memo","onClose","visible","suppliers","title","placement","JSON","stringify","Panel","Collapse","SettingsModal","handleSave","searchModule","useMemo","Item","label","tooltip","wrapperCol","span","labelCol","min","valuePropName","scoringModule","onCancel","footer","layout","labelWrap","size","labelAlign","ghost","expandIconPosition","defaultActiveKey","header","noStyle","onClick","DashboardPage","fetchItemsRequest","searchItemRequest","fetchSuppliersRequest","setSuppliers","isSuppliersListVisible","setIsSuppliersListVisible","isSettingsVisible","setIsSettingsVisible","result","categories","dataItems","reduce","acc","category","categoryItems","items","map","key","categoryRowItem","children","push","handleRowItemClick","res","handleSuppliersListClose","handleAddItemSubmit","openSettingsModal","handleSettingsModalClose","SettingOutlined","columns","dataIndex","width","align","dataSource","pagination","position","scroll","y","bordered","rowClassName","record","onRow","rowIndex","expandable","defaultExpandAllRows","showExpandColumn","expandRowByClick","rowExpandable","App","path","element","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36797103.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport './header.scss';\n\nexport const Header: FC = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"header__logo\"></div>\n      <div className=\"header__label\">Поиск поставщиков</div>\n\n      {/* <div className=\"header__nav\"></div> */}\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Header } from '../header/header';\n\nimport './base-layout.scss';\n\nexport const BaseLayout: FC = () => {\n  return (\n    <div className=\"base-layout\">\n      <Header />\n      <div className=\"base-layout__main\">\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst timeout = 600000;\nconst axiosInstance = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' ? '/api' : 'http://93.157.254.203:7778/api',\n  timeout,\n});\n\n// const defaultErrorInterceptor = (error) => Promise.reject(error);\n// const defaultRequestInterceptor = (config) => config;\n// const defaultResponseInterceptor = (response) => response;\n\nexport function setHeader(key: string, value: string) {\n  axiosInstance.defaults.headers.common[key] = value;\n}\n\nexport function unsetHeader(key: string) {\n  delete axiosInstance.defaults.headers.common[key];\n}\n\n// export function addRequestInterceptor({ request, error }) {\n//   const interceptor = axiosInstance.interceptors.request.use(\n//     request || defaultRequestInterceptor,\n//     error || defaultErrorInterceptor\n//   );\n//   return () => {\n//     axiosInstance.interceptors.request.eject(interceptor);\n//   };\n// }\n\n// export function addResponseInterceptor({ response, error }) {\n//   const interceptor = axiosInstance.interceptors.response.use(\n//     response || defaultResponseInterceptor,\n//     error || defaultErrorInterceptor\n//   );\n//   return () => {\n//     axiosInstance.interceptors.response.eject(interceptor);\n//   };\n// }\n\n// const get = (url, config) => {\n//   return axiosInstance.get(url, config).then((response) => response.data);\n// };\n\nconst client = {\n  get: axiosInstance.get,\n  delete: axiosInstance.delete,\n  post: axiosInstance.post,\n  put: axiosInstance.put,\n  patch: axiosInstance.patch,\n  request: axiosInstance.request,\n};\n\nexport default client;\n","import client from './client';\n\nexport function getItems() {\n  return client.get('/items');\n}\n\nexport function searchItem({ search }: { search: string }) {\n  return client.post('/items', { search });\n}\n\nexport function getSuppliersByItemId({ id }: { id: number }) {\n  return client.get('/suppliers', { params: { item: id } });\n}\n","import { useState, useEffect, useCallback } from 'react';\n\nconst useFetch = <T>(\n  fetchMethod: (params: any) => Promise<any>,\n  initialParams: Record<string, any> = {},\n  forceStart = false\n) => {\n  const [params, updateParams] = useState(initialParams);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState<T>();\n  const [hasError, setHasError] = useState(false);\n  const [isDone, setIsDone] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [refetchIndex, setRefetchIndex] = useState(0);\n\n  const refetch = () => setRefetchIndex((prevRefetchIndex) => prevRefetchIndex + 1);\n\n  const fetch = useCallback(\n    (restParams = {}) => {\n      setIsLoading(true);\n\n      return fetchMethod({ ...params, ...restParams })\n        .then((response) => {\n          if (response.status === 200) {\n            setData(response.data);\n          } else {\n            setHasError(true);\n            setErrorMessage(response.data);\n          }\n          return response.data;\n        })\n        .catch((err) => {\n          setHasError(true);\n          setErrorMessage(err?.message);\n        })\n        .finally(() => {\n          setIsLoading(false);\n          setIsDone(true);\n        });\n    },\n    [setIsLoading, fetchMethod, params, setData, setHasError, setErrorMessage]\n  );\n\n  useEffect(() => {\n    if (!forceStart) {\n      return;\n    }\n\n    fetch();\n  }, [fetch, forceStart, refetchIndex]);\n\n  return { fetch, data, isLoading, isDone, hasError, errorMessage, updateParams, refetch };\n};\n\nexport default useFetch;\n","import { Button, Form, Input } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport React, { FC, useCallback, useState } from 'react';\nimport './add-item-form.scss';\n\ntype Props = {\n  onSubmit: (search: string) => void;\n  loading?: boolean;\n};\nexport const AddItemForm: FC<Props> = ({ onSubmit, loading = false }) => {\n  const [search, setSearch] = useState('');\n\n  const handleChange = useCallback(\n    (event) => {\n      setSearch(event.target.value);\n    },\n    [setSearch]\n  );\n  const handleSubmit = useCallback(() => {\n    onSubmit(search);\n  }, [onSubmit, search]);\n\n  return (\n    <Form dir=\"horizontal\" className=\"add-item-form\" onFinish={handleSubmit}>\n      <Input value={search} onChange={handleChange} placeholder=\"Введите название номенклатуры\" />\n      <Button\n        type=\"primary\"\n        icon={<SearchOutlined />}\n        htmlType=\"submit\"\n        className=\"add-item-form__button\"\n        loading={loading}\n      >\n        Искать\n      </Button>\n    </Form>\n  );\n};\n","import React, { FC, memo } from 'react';\nimport { Drawer } from 'antd';\nimport './suppliers-list.scss';\n\ntype Props = {\n  visible: boolean;\n  onClose: () => void;\n  suppliers?: any;\n};\nexport const SuppliersList: FC<Props> = memo(({ onClose, visible, suppliers }) => {\n  return (\n    <Drawer title=\"Поставщики\" placement=\"right\" onClose={onClose} visible={visible}>\n      <p>{JSON.stringify(suppliers)}</p>\n    </Drawer>\n  );\n});\n","import React, { FC, memo, useMemo, useState } from 'react';\nimport { Space, Button, Collapse, Form, Modal, Checkbox, Input, InputNumber } from 'antd';\nimport { SettingOutlined } from '@ant-design/icons';\nimport './settings.scss';\n\nconst { Panel } = Collapse;\n\ntype Props = {\n  visible?: boolean;\n  onClose?: () => void;\n};\nexport const SettingsModal: FC<Props> = memo(({ visible, onClose }) => {\n  const handleSave = () => {};\n  const handleReset = () => {\n    onClose && onClose();\n  };\n  const handleClose = () => {\n    onClose && onClose();\n  };\n\n  const searchModule = useMemo(\n    () => (\n      <>\n        <Form.Item label=\"Адрес объекта\" tooltip=\"Искать поставщиков для объекта по адресу\" wrapperCol={{ span: 10 }}>\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Мин. количество поставщиков\" tooltip=\"Влияет на скорость поиска\" labelCol={{ span: 17 }}>\n          <InputNumber min={0} />\n        </Form.Item>\n        <Form.Item\n          label=\"Мин. количество «надёжных» поставщиков\"\n          tooltip=\"Влияет на скорость поиска\"\n          labelCol={{ span: 17 }}\n        >\n          <InputNumber min={0} />\n        </Form.Item>\n        <Form.Item valuePropName=\"checked\">\n          <Checkbox>Искать только действующих поставщиков</Checkbox>\n        </Form.Item>\n        <Form.Item valuePropName=\"checked\" className=\"settings__checkbox\">\n          <Checkbox>Искать только производителей</Checkbox>\n        </Form.Item>\n      </>\n    ),\n    []\n  );\n  const scoringModule = useMemo(\n    () => (\n      <>\n        <Form.Item label=\"Уставной капитал, не менее\" labelCol={{ span: 12 }}>\n          <InputNumber min={0} />\n        </Form.Item>\n        <Form.Item label=\"Лет работы, не менее\" labelCol={{ span: 12 }}>\n          <InputNumber min={0} />\n        </Form.Item>\n      </>\n    ),\n    []\n  );\n\n  return (\n    <Modal title=\"Настройки инструмента\" visible={visible} onCancel={handleClose} footer={null}>\n      <Form onFinish={handleSave} layout=\"horizontal\" labelWrap size=\"small\" labelAlign=\"left\">\n        <Collapse ghost className=\"settings\" expandIconPosition=\"left\" defaultActiveKey={['1', '2']}>\n          <Panel header=\"Модуль поиска\" key=\"1\">\n            {searchModule}\n          </Panel>\n          <Panel header=\"Модуль скоринга «надёжного» поставщика\" key=\"2\">\n            {scoringModule}\n          </Panel>\n          <Panel header=\"Технические настройки\" key=\"3\"></Panel>\n        </Collapse>\n\n        <Form.Item noStyle>\n          <Space className=\"settings__footer\">\n            <Button size=\"middle\" onClick={handleReset} type=\"ghost\" htmlType=\"reset\">\n              Сбросить\n            </Button>\n            <Button size=\"middle\" onClick={handleSave} type=\"primary\" htmlType=\"submit\">\n              Применить\n            </Button>\n          </Space>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n});\n","import React, { FC, useCallback, useEffect, useState } from 'react';\nimport { getItems, getSuppliersByItemId, searchItem } from '../../api/api';\nimport useFetch from '../../hooks/useFetch';\n\nimport { Button, Table } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\n// import { DownOutlined } from '@ant-design/icons';\nimport { SettingOutlined } from '@ant-design/icons';\n\nimport './dashboard.scss';\nimport { AddItemForm } from '../../components/add-item-form/add-item-form';\nimport { SuppliersList } from '../../components/suppliers-list/suppliers-list';\nimport { SettingsModal } from '../../components/settings/settings';\n\nexport const DashboardPage: FC = () => {\n  const fetchItemsRequest = useFetch(getItems);\n  const searchItemRequest = useFetch(searchItem);\n  const fetchSuppliersRequest = useFetch(getSuppliersByItemId);\n\n  const [data, setData] = useState([]);\n  const [suppliers, setSuppliers] = useState([]);\n  const [isSuppliersListVisible, setIsSuppliersListVisible] = useState(false);\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n\n  useEffect(() => {\n    fetchItemsRequest.fetch().then((result) => {\n      if (!result || !result.categories) {\n        setData([]);\n      }\n\n      const { categories } = result;\n\n      const dataItems = categories.reduce((acc: any, category: any) => {\n        const categoryItems = category.items.map((item: any) => ({ ...item, key: item.id, category: category.title }));\n        const categoryRowItem = {\n          key: `${category.id}-category`,\n          label: '',\n          category: category.title,\n          children: categoryItems,\n        };\n\n        acc.push(categoryRowItem);\n        return acc;\n      }, []);\n\n      setData(dataItems);\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  const columns: ColumnsType<any> = [\n    {\n      title: 'Категория',\n      dataIndex: 'category',\n      key: 'category',\n      width: '18%',\n      className: 'dashboard__column--bold',\n    },\n    {\n      title: 'Номенклатура',\n      dataIndex: 'label',\n      key: 'label',\n      className: 'dashboard__column--bold',\n      // sorter: (a, b) => a.age - b.age,\n    },\n    {\n      title: 'Активных поставщиков',\n      dataIndex: 'activeSuppliers',\n      key: 'activeSuppliers',\n      width: '12%',\n      align: 'right',\n      className: 'dashboard__column--bold',\n      // filters: [\n      //   {\n      //     text: 'London',\n      //     value: 'London',\n      //   },\n      //   {\n      //     text: 'New York',\n      //     value: 'New York',\n      //   },\n      // ],\n      // onFilter: (value, record) => record.address.indexOf(value) === 0,\n    },\n    {\n      title: 'Надежных поставщиков',\n      dataIndex: 'reliableSuppliers',\n      key: 'reliableSuppliers',\n      width: '12%',\n      align: 'right',\n      className: 'dashboard__column--bold',\n    },\n    {\n      title: 'Поставщиков без проверки',\n      dataIndex: 'unverifiedSuppliers',\n      key: 'unverifiedSuppliers',\n      width: '12%',\n      align: 'right',\n    },\n    {\n      title: 'Ненадежных поставщиков',\n      dataIndex: 'unreliableSupplier',\n      key: 'unreliableSupplier',\n      width: '12%',\n      align: 'right',\n    },\n\n    // {\n    //   title: 'Action',\n    //   key: 'action',\n    //   sorter: true,\n    //   render: () => (\n    //     <Space size=\"middle\">\n    //       <a>Delete</a>\n    //       <a className=\"ant-dropdown-link\">\n    //         More actions <DownOutlined />\n    //       </a>\n    //     </Space>\n    //   ),\n    // },\n  ];\n  const handleRowItemClick = useCallback(\n    (id: any) => {\n      setIsSuppliersListVisible(true);\n      fetchSuppliersRequest.fetch({ id }).then((res) => {\n        setSuppliers(res);\n      });\n    },\n    [setSuppliers, fetchSuppliersRequest]\n  );\n  const handleSuppliersListClose = useCallback(() => {\n    setIsSuppliersListVisible(false);\n  }, [setIsSuppliersListVisible]);\n\n  const handleAddItemSubmit = useCallback(\n    (label: string) => {\n      searchItemRequest.fetch({ search: label }).then((res) => {\n        // console.log('fetched', res);\n      });\n    },\n    [searchItemRequest]\n  );\n  const openSettingsModal = useCallback(() => {\n    setIsSettingsVisible(true);\n  }, [setIsSettingsVisible]);\n  const handleSettingsModalClose = useCallback(() => {\n    setIsSettingsVisible(false);\n  }, [setIsSettingsVisible]);\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard__form-wrapper\">\n        <AddItemForm onSubmit={handleAddItemSubmit} loading={searchItemRequest.isLoading} />\n        <Button\n          className=\"dashboard__settings-button\"\n          type=\"primary\"\n          icon={<SettingOutlined />}\n          onClick={openSettingsModal}\n        />\n      </div>\n      <SettingsModal visible={isSettingsVisible} onClose={handleSettingsModalClose} />\n\n      <Table\n        columns={columns}\n        dataSource={data}\n        pagination={{ position: [] }}\n        scroll={{ y: 700 }}\n        bordered\n        size=\"small\"\n        loading={fetchItemsRequest.isLoading || searchItemRequest.isLoading}\n        rowClassName={(record) => (!record.label ? 'dashboard__row--category' : '')}\n        onRow={(record, rowIndex) => ({\n          onClick: () => {\n            if (record.label) {\n              handleRowItemClick(record.id);\n            }\n          },\n        })}\n        expandable={{\n          defaultExpandAllRows: true,\n          showExpandColumn: true,\n          expandRowByClick: true,\n          rowExpandable: (record) => !record.label,\n        }}\n        className=\"dashboard__table\"\n      />\n\n      <SuppliersList visible={isSuppliersListVisible} onClose={handleSuppliersListClose} suppliers={suppliers} />\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport { BaseLayout } from './components/base-layout/base-layout';\nimport { DashboardPage } from './pages/Dashboard/Dashboard';\n\nexport const App: FC = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<BaseLayout />}>\n        <Route index element={<DashboardPage />} />\n      </Route>\n    </Routes>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './assets/styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}