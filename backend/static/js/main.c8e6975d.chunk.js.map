{"version":3,"sources":["components/header/header.tsx","components/base-layout/base-layout.tsx","api/client.ts","api/api.ts","hooks/useFetch.ts","components/add-item-form/add-item-form.tsx","components/suppliers-list/suppliers-list.tsx","pages/Dashboard/Dashboard.tsx","App.tsx","index.tsx"],"names":["Header","className","BaseLayout","axiosInstance","axios","create","baseURL","timeout","client","get","delete","post","put","patch","request","getItems","searchItem","search","getSuppliersByItemId","id","params","item","useFetch","fetchMethod","initialParams","forceStart","useState","updateParams","isLoading","setIsLoading","data","setData","hasError","setHasError","isDone","setIsDone","errorMessage","setErrorMessage","refetchIndex","setRefetchIndex","refetch","prevRefetchIndex","fetch","useCallback","restParams","then","response","status","catch","err","message","finally","useEffect","AddItemForm","onSubmit","setSearch","handleChange","event","target","value","handleSubmit","dir","onFinish","onChange","placeholder","type","icon","SearchOutlined","htmlType","SuppliersList","memo","onClose","visible","suppliers","title","placement","JSON","stringify","DashboardPage","fetchItemsRequest","searchItemRequest","fetchSuppliersRequest","setSuppliers","isSuppliersListVisible","setIsSuppliersListVisible","result","categories","dataItems","reduce","acc","category","categoryItems","items","map","key","categoryRowItem","label","children","push","handleRowItemClick","res","handleSuppliersListClose","handleAddItemSubmit","columns","dataIndex","width","align","dataSource","pagination","position","bordered","size","loading","rowClassName","record","onRow","rowIndex","onClick","App","path","element","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8e6975d.chunk.js","sourcesContent":["import React, { FC } from 'react';\n\nexport const Header: FC = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"header__logo\"></div>\n\n      {/* <div className=\"header__nav\"></div> */}\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Header } from '../header/header';\n\nimport './base-layout.scss';\n\nexport const BaseLayout: FC = () => {\n  return (\n    <div className=\"base-layout\">\n      <Header />\n      <div className=\"base-layout__main\">\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst timeout = 600000;\nconst axiosInstance = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' ? '/api' : 'http://93.157.254.203:7778/api',\n  timeout,\n});\n\n// const defaultErrorInterceptor = (error) => Promise.reject(error);\n// const defaultRequestInterceptor = (config) => config;\n// const defaultResponseInterceptor = (response) => response;\n\nexport function setHeader(key: string, value: string) {\n  axiosInstance.defaults.headers.common[key] = value;\n}\n\nexport function unsetHeader(key: string) {\n  delete axiosInstance.defaults.headers.common[key];\n}\n\n// export function addRequestInterceptor({ request, error }) {\n//   const interceptor = axiosInstance.interceptors.request.use(\n//     request || defaultRequestInterceptor,\n//     error || defaultErrorInterceptor\n//   );\n//   return () => {\n//     axiosInstance.interceptors.request.eject(interceptor);\n//   };\n// }\n\n// export function addResponseInterceptor({ response, error }) {\n//   const interceptor = axiosInstance.interceptors.response.use(\n//     response || defaultResponseInterceptor,\n//     error || defaultErrorInterceptor\n//   );\n//   return () => {\n//     axiosInstance.interceptors.response.eject(interceptor);\n//   };\n// }\n\n// const get = (url, config) => {\n//   return axiosInstance.get(url, config).then((response) => response.data);\n// };\n\nconst client = {\n  get: axiosInstance.get,\n  delete: axiosInstance.delete,\n  post: axiosInstance.post,\n  put: axiosInstance.put,\n  patch: axiosInstance.patch,\n  request: axiosInstance.request,\n};\n\nexport default client;\n","import client from './client';\n\nexport function getItems() {\n  return client.get('/items');\n}\n\nexport function searchItem({ search }: { search: string }) {\n  return client.post('/items', { search });\n}\n\nexport function getSuppliersByItemId({ id }: { id: number }) {\n  return client.get('/suppliers', { params: { item: id } });\n}\n","import { useState, useEffect, useCallback } from 'react';\n\nconst useFetch = <T>(\n  fetchMethod: (params: any) => Promise<any>,\n  initialParams: Record<string, any> = {},\n  forceStart = false\n) => {\n  const [params, updateParams] = useState(initialParams);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState<T>();\n  const [hasError, setHasError] = useState(false);\n  const [isDone, setIsDone] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [refetchIndex, setRefetchIndex] = useState(0);\n\n  const refetch = () => setRefetchIndex((prevRefetchIndex) => prevRefetchIndex + 1);\n\n  const fetch = useCallback(\n    (restParams = {}) => {\n      setIsLoading(true);\n\n      return fetchMethod({ ...params, ...restParams })\n        .then((response) => {\n          if (response.status === 200) {\n            setData(response.data);\n          } else {\n            setHasError(true);\n            setErrorMessage(response.data);\n          }\n          return response.data;\n        })\n        .catch((err) => {\n          setHasError(true);\n          setErrorMessage(err?.message);\n        })\n        .finally(() => {\n          setIsLoading(false);\n          setIsDone(true);\n        });\n    },\n    [setIsLoading, fetchMethod, params, setData, setHasError, setErrorMessage]\n  );\n\n  useEffect(() => {\n    if (!forceStart) {\n      return;\n    }\n\n    fetch();\n  }, [fetch, forceStart, refetchIndex]);\n\n  return { fetch, data, isLoading, isDone, hasError, errorMessage, updateParams, refetch };\n};\n\nexport default useFetch;\n","import { Button, Form, Input } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport React, { FC, useCallback, useState } from 'react';\nimport './add-item-form.scss';\n\ntype Props = {\n  onSubmit: (search: string) => void;\n};\nexport const AddItemForm: FC<Props> = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const handleChange = useCallback(\n    (event) => {\n      setSearch(event.target.value);\n    },\n    [setSearch]\n  );\n  const handleSubmit = useCallback(() => {\n    onSubmit(search);\n  }, [onSubmit, search]);\n\n  return (\n    <Form dir=\"horizontal\" className=\"add-item-form\" onFinish={handleSubmit}>\n      <Input value={search} onChange={handleChange} placeholder=\"Введите название номенклатуры\" />\n      <Button type=\"primary\" icon={<SearchOutlined />} htmlType=\"submit\" className=\"add-item-form__button\">\n        Искать\n      </Button>\n    </Form>\n  );\n};\n","import React, { FC, memo } from 'react';\nimport { Drawer } from 'antd';\nimport './suppliers-list.scss';\n\ntype Props = {\n  visible: boolean;\n  onClose: () => void;\n  suppliers?: any;\n};\nexport const SuppliersList: FC<Props> = memo(({ onClose, visible, suppliers }) => {\n  return (\n    <Drawer title=\"Поставщики\" placement=\"right\" onClose={onClose} visible={visible}>\n      <p>{JSON.stringify(suppliers)}</p>\n    </Drawer>\n  );\n});\n","import React, { FC, useCallback, useEffect, useState } from 'react';\nimport { getItems, getSuppliersByItemId, searchItem } from '../../api/api';\nimport useFetch from '../../hooks/useFetch';\n\nimport { Table } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\n// import { DownOutlined } from '@ant-design/icons';\n\nimport './dashboard.scss';\nimport { AddItemForm } from '../../components/add-item-form/add-item-form';\nimport { SuppliersList } from '../../components/suppliers-list/suppliers-list';\n\nexport const DashboardPage: FC = () => {\n  const fetchItemsRequest = useFetch(getItems);\n  const searchItemRequest = useFetch(searchItem);\n  const fetchSuppliersRequest = useFetch(getSuppliersByItemId);\n\n  const [data, setData] = useState([]);\n  const [suppliers, setSuppliers] = useState([]);\n  const [isSuppliersListVisible, setIsSuppliersListVisible] = useState(false);\n\n  useEffect(() => {\n    fetchItemsRequest.fetch().then((result) => {\n      //   console.log(result);\n      const { categories } = result;\n\n      if (!categories) {\n        setData([]);\n      }\n\n      const dataItems = categories.reduce((acc: any, category: any) => {\n        const categoryItems = category.items.map((item: any) => ({ ...item, key: item.id, category: category.title }));\n        const categoryRowItem = {\n          key: `${category.id}-category`,\n          label: '',\n          category: category.title,\n          children: categoryItems,\n        };\n\n        acc.push(categoryRowItem);\n        return acc;\n      }, []);\n\n      setData(dataItems);\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  const columns: ColumnsType<any> = [\n    {\n      title: 'Категория',\n      dataIndex: 'category',\n      key: 'category',\n      width: '15%',\n      className: 'dashboard__column--bold',\n    },\n    {\n      title: 'Номенклатура',\n      dataIndex: 'label',\n      key: 'label',\n      className: 'dashboard__column--bold',\n      // sorter: (a, b) => a.age - b.age,\n    },\n    {\n      title: 'Активных поставщиков',\n      dataIndex: 'activeSuppliers',\n      key: 'activeSuppliers',\n      width: '10%',\n      align: 'right',\n      className: 'dashboard__column--bold',\n      // filters: [\n      //   {\n      //     text: 'London',\n      //     value: 'London',\n      //   },\n      //   {\n      //     text: 'New York',\n      //     value: 'New York',\n      //   },\n      // ],\n      // onFilter: (value, record) => record.address.indexOf(value) === 0,\n    },\n    {\n      title: 'Надежных поставщиков',\n      dataIndex: 'reliableSuppliers',\n      key: 'reliableSuppliers',\n      width: '10%',\n      align: 'right',\n      className: 'dashboard__column--bold',\n    },\n    {\n      title: 'Поставщиков без проверки',\n      dataIndex: 'unverifiedSuppliers',\n      key: 'unverifiedSuppliers',\n      width: '12%',\n      align: 'right',\n    },\n    {\n      title: 'Ненадежных поставщиков',\n      dataIndex: 'unreliableSupplier',\n      key: 'unreliableSupplier',\n      width: '10%',\n      align: 'right',\n    },\n\n    // {\n    //   title: 'Action',\n    //   key: 'action',\n    //   sorter: true,\n    //   render: () => (\n    //     <Space size=\"middle\">\n    //       <a>Delete</a>\n    //       <a className=\"ant-dropdown-link\">\n    //         More actions <DownOutlined />\n    //       </a>\n    //     </Space>\n    //   ),\n    // },\n  ];\n  const handleRowItemClick = useCallback(\n    (id: any) => {\n      setIsSuppliersListVisible(true);\n      fetchSuppliersRequest.fetch({ id }).then((res) => {\n        setSuppliers(res);\n      });\n    },\n    [setSuppliers, fetchSuppliersRequest]\n  );\n  const handleSuppliersListClose = useCallback(() => {\n    setIsSuppliersListVisible(false);\n  }, [setIsSuppliersListVisible]);\n\n  const handleAddItemSubmit = useCallback(\n    (label: string) => {\n      searchItemRequest.fetch({ search: label }).then((res) => {\n        // console.log('fetched', res);\n      });\n    },\n    [searchItemRequest]\n  );\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard__form-wrapper\">\n        <AddItemForm onSubmit={handleAddItemSubmit} />\n      </div>\n\n      <Table\n        columns={columns}\n        dataSource={data}\n        pagination={{ position: [] }}\n        bordered\n        size=\"small\"\n        loading={fetchItemsRequest.isLoading || searchItemRequest.isLoading}\n        rowClassName={(record) => (!record.label ? 'dashboard__row--category' : '')}\n        onRow={(record, rowIndex) => ({\n          onClick: () => {\n            if (record.label) {\n              handleRowItemClick(record.id);\n            }\n          },\n        })}\n        className=\"dashboard__table\"\n      />\n\n      <SuppliersList visible={isSuppliersListVisible} onClose={handleSuppliersListClose} suppliers={suppliers} />\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport { BaseLayout } from './components/base-layout/base-layout';\nimport { DashboardPage } from './pages/Dashboard/Dashboard';\n\nexport const App: FC = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<BaseLayout />}>\n        <Route index element={<DashboardPage />} />\n      </Route>\n    </Routes>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './assets/styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}