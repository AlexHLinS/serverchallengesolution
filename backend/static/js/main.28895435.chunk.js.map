{"version":3,"sources":["components/header/header.tsx","components/base-layout/base-layout.tsx","api/client.ts","api/api.ts","hooks/useFetch.ts","components/add-item-form/add-item-form.tsx","components/suppliers-list/suppliers-list.tsx","components/settings/settings.tsx","pages/Dashboard/Dashboard.tsx","App.tsx","index.tsx"],"names":["Header","className","BaseLayout","axiosInstance","axios","create","baseURL","timeout","client","get","delete","post","put","patch","request","getItems","searchItem","search","params","getSuppliersByItemId","id","item","useFetch","fetchMethod","initialParams","forceStart","useState","updateParams","isLoading","setIsLoading","data","setData","hasError","setHasError","isDone","setIsDone","errorMessage","setErrorMessage","refetchIndex","setRefetchIndex","refetch","prevRefetchIndex","fetch","useCallback","restParams","then","response","status","catch","err","message","finally","useEffect","AddItemForm","onAdd","onSelect","options","loading","validOptions","setValidOptions","setSearch","newOptions","reduce","acc","category","title","children","items","map","count","label","activeSuppliers","value","style","display","justifyContent","catOption","handleChange","select","handleSearch","handleAdd","notFoundContent","useMemo","icon","PlusOutlined","onClick","dropdownClassName","onSearch","filterOption","inputValue","option","toLowerCase","includes","placeholder","allowClear","Option","Select","SuppliersList","memo","onClose","visible","suppliers","filter","setFilter","type","setType","filteredSuppliers","handleChangeFIlter","handleTypeChange","e","target","checked","placement","width","length","image","Empty","PRESENTED_IMAGE_SIMPLE","onChange","supplier","index","key","SupplierCard","name","inn","contacts","capitalization","created_at","debet","credit","Panel","Collapse","SettingsModal","onSubmit","_search","handleClose","searchModule","Item","tooltip","wrapperCol","span","labelCol","min","valuePropName","scoringModule","onCancel","footer","onFinish","layout","labelWrap","size","labelAlign","requiredMark","required","direction","onInput","accept","UploadOutlined","ghost","expandIconPosition","defaultActiveKey","header","noStyle","htmlType","empty","columns","dataIndex","align","render","sup","record","DashboardPage","fetchItemsRequest","searchItemRequest","fetchSuppliersRequest","rawData","setRawData","selectedItem","setSelectedItem","setSuppliers","isSuppliersListVisible","setIsSuppliersListVisible","isSettingsVisible","setIsSettingsVisible","selectedRowKeys","setSelectedRowKeys","formatItemsResponse","categories","dataItems","categoryItems","categoryRowItem","push","handleRowItemClick","res","handleSuppliersListClose","handleAddItemSubmit","handleItemSelect","openSettingsModal","handleSettingsModalClose","filteredData","find","handleAddItem","onSelectChange","downloadSuppliers","filename","text","element","document","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","download","DownloadOutlined","SettingOutlined","dataSource","pagination","position","scroll","y","bordered","rowClassName","onRow","rowIndex","expandable","defaultExpandAllRows","showExpandColumn","expandRowByClick","rowExpandable","rowSelection","checkStrictly","undefined","App","path","ReactDOM","StrictMode","locale","ruRU","getElementById"],"mappings":"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","file":"static/js/main.28895435.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport './header.scss';\n\nexport const Header: FC = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"header__logo\"></div>\n      <div className=\"header__label\">Поиск поставщиков</div>\n\n      {/* <div className=\"header__nav\"></div> */}\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Header } from '../header/header';\n\nimport './base-layout.scss';\n\nexport const BaseLayout: FC = () => {\n  return (\n    <div className=\"base-layout\">\n      <Header />\n      <div className=\"base-layout__main\">\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst timeout = 600000;\nconst axiosInstance = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' ? '/api' : 'http://93.157.254.203:7778/api',\n  timeout,\n});\n\n// const defaultErrorInterceptor = (error) => Promise.reject(error);\n// const defaultRequestInterceptor = (config) => config;\n// const defaultResponseInterceptor = (response) => response;\n\nexport function setHeader(key: string, value: string) {\n  axiosInstance.defaults.headers.common[key] = value;\n}\n\nexport function unsetHeader(key: string) {\n  delete axiosInstance.defaults.headers.common[key];\n}\n\n// export function addRequestInterceptor({ request, error }) {\n//   const interceptor = axiosInstance.interceptors.request.use(\n//     request || defaultRequestInterceptor,\n//     error || defaultErrorInterceptor\n//   );\n//   return () => {\n//     axiosInstance.interceptors.request.eject(interceptor);\n//   };\n// }\n\n// export function addResponseInterceptor({ response, error }) {\n//   const interceptor = axiosInstance.interceptors.response.use(\n//     response || defaultResponseInterceptor,\n//     error || defaultErrorInterceptor\n//   );\n//   return () => {\n//     axiosInstance.interceptors.response.eject(interceptor);\n//   };\n// }\n\n// const get = (url, config) => {\n//   return axiosInstance.get(url, config).then((response) => response.data);\n// };\n\nconst client = {\n  get: axiosInstance.get,\n  delete: axiosInstance.delete,\n  post: axiosInstance.post,\n  put: axiosInstance.put,\n  patch: axiosInstance.patch,\n  request: axiosInstance.request,\n};\n\nexport default client;\n","import client from './client';\n\nexport function getItems() {\n  return client.get('/items');\n}\n\nexport function searchItem({ search }: { search: string }) {\n  return client.get('/item', { params: { search } });\n}\n\nexport function getSuppliersByItemId({ id }: { id: number }) {\n  return client.get('/suppliers', { params: { item: id } });\n}\n","import { useState, useEffect, useCallback } from 'react';\n\nconst useFetch = <T>(\n  fetchMethod: (params: any) => Promise<any>,\n  initialParams: Record<string, any> = {},\n  forceStart = false\n) => {\n  const [params, updateParams] = useState(initialParams);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState<T>();\n  const [hasError, setHasError] = useState(false);\n  const [isDone, setIsDone] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [refetchIndex, setRefetchIndex] = useState(0);\n\n  const refetch = () => setRefetchIndex((prevRefetchIndex) => prevRefetchIndex + 1);\n\n  const fetch = useCallback(\n    (restParams = {}) => {\n      setIsLoading(true);\n\n      return fetchMethod({ ...params, ...restParams })\n        .then((response) => {\n          if (response.status === 200) {\n            setData(response.data);\n          } else {\n            setHasError(true);\n            setErrorMessage(response.data);\n          }\n          return response.data;\n        })\n        .catch((err) => {\n          setHasError(true);\n          setErrorMessage(err?.message);\n        })\n        .finally(() => {\n          setIsLoading(false);\n          setIsDone(true);\n        });\n    },\n    [setIsLoading, fetchMethod, params, setData, setHasError, setErrorMessage]\n  );\n\n  useEffect(() => {\n    if (!forceStart) {\n      return;\n    }\n\n    fetch();\n  }, [fetch, forceStart, refetchIndex]);\n\n  return { fetch, data, isLoading, isDone, hasError, errorMessage, updateParams, refetch };\n};\n\nexport default useFetch;\n","import { Button, AutoComplete, Cascader, Input } from 'antd';\nimport { SearchOutlined, PlusOutlined, UserOutlined } from '@ant-design/icons';\nimport React, { FC, useCallback, useEffect, useMemo, useState } from 'react';\nimport './add-item-form.scss';\n\nconst renderTitle = (title: string) => <span>{title}</span>;\nconst renderItem = (title: string, count?: number | null) => ({\n  value: title,\n  label: (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n      }}\n    >\n      {title}\n      {count && <span>Поставщиков {count}</span>}\n    </div>\n  ),\n});\n\ntype Props = {\n  onAdd: (search: string) => void;\n  onSelect: (item: any) => void;\n  loading?: boolean;\n  options: any[];\n};\nexport const AddItemForm: FC<Props> = ({ onAdd, onSelect, options, loading = false }) => {\n  const [validOptions, setValidOptions] = useState<any[]>([]);\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    const newOptions = options.reduce((acc, category) => {\n      const children = category.items.map(({ id, label, activeSuppliers }: any) => ({\n        ...renderItem(label, activeSuppliers),\n      }));\n      const catOption = {\n        value: category.title,\n        title: category.title,\n        label: renderTitle(category.title),\n        options: children,\n      };\n\n      return [...acc, catOption];\n    }, []);\n\n    setValidOptions(newOptions);\n  }, [options, setValidOptions]);\n\n  const handleChange = useCallback(\n    (select: any) => {\n      onSelect(select);\n    },\n    [onSelect]\n  );\n\n  const handleSearch = useCallback(\n    (value) => {\n      setSearch(value);\n    },\n    [setSearch]\n  );\n  const handleAdd = useCallback(() => {\n    onAdd(search);\n  }, [onAdd, search]);\n  const notFoundContent = useMemo(\n    () => (\n      <div className=\"add-item-form__empty\">\n        <span className=\"add-item-form__empty-text\">Не найдено</span>\n        <Button icon={<PlusOutlined />} onClick={handleAdd} className=\"add-item-form__button\" loading={loading}>\n          Добавить номенклатуру\n        </Button>\n      </div>\n    ),\n    [handleAdd, loading]\n  );\n\n  return (\n    <div className=\"add-item-form\">\n      <AutoComplete\n        className=\"add-item-form__search\"\n        dropdownClassName=\"add-item-form__search-dropdown\"\n        options={validOptions}\n        onSelect={handleChange}\n        onSearch={handleSearch}\n        filterOption={(inputValue, option) => option!.value.toLowerCase().includes(inputValue.toLowerCase())}\n        notFoundContent={notFoundContent}\n        placeholder=\"Поиск по названию номенклатуры\"\n        allowClear\n      />\n    </div>\n  );\n};\n","import React, { FC, memo, useCallback, useMemo, useState } from 'react';\nimport { Checkbox, Drawer, Empty, Select, Space, Spin } from 'antd';\nimport './suppliers-list.scss';\n\nconst { Option } = Select;\n\ntype Props = {\n  visible: boolean;\n  onClose: () => void;\n  suppliers?: any;\n  loading?: boolean;\n};\nexport const SuppliersList: FC<Props> = memo(({ onClose, visible, suppliers, loading }) => {\n  const [filter, setFilter] = useState('');\n  const [type, setType] = useState('');\n  const filteredSuppliers = useMemo(() => {\n    if (!filter && !type) return suppliers;\n\n    return suppliers;\n  }, [suppliers, filter, type]);\n\n  const handleChangeFIlter = useCallback(\n    (value) => {\n      setFilter(value);\n    },\n    [setFilter]\n  );\n  const handleTypeChange = useCallback(\n    (e) => {\n      setType(e.target.checked ? 'direct' : '');\n    },\n    [setType]\n  );\n\n  return (\n    <Drawer title=\"Поставщики\" placement=\"right\" onClose={onClose} visible={visible} width=\"30vw\">\n      {loading && <Spin />}\n      {!suppliers.length && !loading && <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />}\n\n      <div className=\"suppliers-list__filter\">\n        <div className=\"suppliers-list__row\">\n          <Select placeholder=\"Учредитель..\" className=\"suppliers-list__select\" allowClear>\n            <Option value=\"rus\">Российский</Option>\n            <Option value=\"out\">Зарубежный</Option>\n          </Select>\n\n          <Select\n            onChange={handleChangeFIlter}\n            placeholder=\"Сортировать по..\"\n            className=\"suppliers-list__select\"\n            allowClear\n          >\n            <Option value=\"reliability\">Сперва надежные</Option>\n          </Select>\n        </div>\n\n        <Checkbox onChange={handleTypeChange}>Только прямые поставщики</Checkbox>\n      </div>\n\n      {filteredSuppliers.map((supplier: any, index: number) => (\n        <SupplierCard {...supplier} key={index} />\n      ))}\n    </Drawer>\n  );\n});\n\nconst SupplierCard: FC = ({ name, inn, contacts, status, capitalization, created_at, debet, credit }: any) => {\n  return (\n    <div className=\"supplier\">\n      {name && (\n        <div className=\"supplier__row\">\n          <div className=\"supplier__value supplier__name\">{name}</div>\n        </div>\n      )}\n      {inn && (\n        <div className=\"supplier__row\">\n          <div className=\"supplier__label\">ИНН:</div>\n          <div className=\"supplier__value\">{inn}</div>\n        </div>\n      )}\n\n      <div className=\"supplier__row\">\n        <div className=\"supplier__label\">Контакты:</div>\n        <div className=\"supplier__value\">{contacts || '-'}</div>\n      </div>\n\n      {status && (\n        <div className=\"supplier__row\">\n          <div className=\"supplier__label\">Статус:</div>\n          <div className=\"supplier__value\">{status}</div>\n        </div>\n      )}\n      {capitalization && (\n        <div className=\"supplier__row\">\n          <div className=\"supplier__label\">Капитализация:</div>\n          <div className=\"supplier__value\">{capitalization}</div>\n        </div>\n      )}\n      {created_at && (\n        <div className=\"supplier__row\">\n          <div className=\"supplier__label\">Дата создания:</div>\n          <div className=\"supplier__value\">{created_at}</div>\n        </div>\n      )}\n      {debet && (\n        <div className=\"supplier__row\">\n          <div className=\"supplier__label\">Дебиторская задолженность:</div>\n          <div className=\"supplier__value\">{debet}</div>\n        </div>\n      )}\n      {credit && (\n        <div className=\"supplier__row\">\n          <div className=\"supplier__label\">Кредиторская задолженность:</div>\n          <div className=\"supplier__value\">{credit}</div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { FC, memo, useEffect, useMemo, useState } from 'react';\nimport { Space, Button, Collapse, Form, Modal, Checkbox, Input, InputNumber, Upload } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport './settings.scss';\n\nconst { Panel } = Collapse;\n\ntype Props = {\n  visible?: boolean;\n  search?: string;\n  onClose?: () => void;\n  onSubmit?: (search: string) => void;\n};\nexport const SettingsModal: FC<Props> = memo(({ search, visible, onClose, onSubmit }) => {\n  const [_search, setSearch] = useState(search);\n  const handleInput = (e: any) => setSearch(e.target.value);\n  useEffect(() => {\n    setSearch(search);\n  }, [search, setSearch]);\n\n  const handleSave = () => {\n    if (!_search) return;\n    onSubmit && onSubmit(_search);\n    handleClose();\n  };\n  const handleReset = () => {\n    onClose && onClose();\n  };\n  const handleClose = () => {\n    onClose && onClose();\n  };\n\n  const searchModule = useMemo(\n    () => (\n      <>\n        <Form.Item label=\"Адрес объекта\" tooltip=\"Искать поставщиков для объекта по адресу\" wrapperCol={{ span: 10 }}>\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Мин. количество поставщиков\" tooltip=\"Влияет на скорость поиска\" labelCol={{ span: 17 }}>\n          <InputNumber min={0} />\n        </Form.Item>\n        <Form.Item\n          label=\"Мин. количество «надёжных» поставщиков\"\n          tooltip=\"Влияет на скорость поиска\"\n          labelCol={{ span: 17 }}\n        >\n          <InputNumber min={0} />\n        </Form.Item>\n        <Form.Item valuePropName=\"checked\">\n          <Checkbox>Искать только действующих поставщиков</Checkbox>\n        </Form.Item>\n        <Form.Item valuePropName=\"checked\" className=\"settings__checkbox\">\n          <Checkbox>Искать только производителей</Checkbox>\n        </Form.Item>\n      </>\n    ),\n    []\n  );\n  const scoringModule = useMemo(\n    () => (\n      <>\n        <Form.Item label=\"Уставной капитал, не менее\" labelCol={{ span: 12 }}>\n          <InputNumber min={0} />\n        </Form.Item>\n        <Form.Item label=\"Лет работы, не менее\" labelCol={{ span: 12 }}>\n          <InputNumber min={0} />\n        </Form.Item>\n      </>\n    ),\n    []\n  );\n\n  return (\n    <Modal title=\"Настройки поиска поставщиков\" visible={visible} onCancel={handleClose} footer={null}>\n      <Form onFinish={handleSave} layout=\"horizontal\" labelWrap size=\"small\" labelAlign=\"left\" requiredMark={false}>\n        <Form.Item label=\"Номенклатура\" name=\"search\" required>\n          <Space direction=\"vertical\" style={{ width: '100%' }}>\n            <Input placeholder=\"Номенклатура для поиска\" name=\"search\" value={_search} onInput={handleInput} />\n            <Upload accept=\".xsl,.xlsx,.csv\">\n              или <Button icon={<UploadOutlined />}>Загрузить в формате xls, csv</Button>\n            </Upload>\n          </Space>\n        </Form.Item>\n\n        <Collapse ghost className=\"settings\" expandIconPosition=\"left\" defaultActiveKey={['1', '2']}>\n          <Panel header=\"Модуль поиска\" key=\"1\">\n            {searchModule}\n          </Panel>\n          <Panel header=\"Модуль скоринга «надёжного» поставщика\" key=\"2\">\n            {scoringModule}\n          </Panel>\n          {/* <Panel header=\"Технические настройки\" key=\"3\"></Panel> */}\n        </Collapse>\n\n        <Form.Item noStyle>\n          <Space className=\"settings__footer\">\n            <Button size=\"middle\" onClick={handleReset} type=\"ghost\" htmlType=\"reset\">\n              Сбросить\n            </Button>\n            <Button size=\"middle\" type=\"primary\" htmlType=\"submit\">\n              Добавить\n            </Button>\n          </Space>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n});\n","import React, { FC, useCallback, useEffect, useMemo, useState } from 'react';\nimport { getItems, getSuppliersByItemId, searchItem } from '../../api/api';\nimport useFetch from '../../hooks/useFetch';\n\nimport { Button, Space, Table } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\n// import { DownOutlined } from '@ant-design/icons';\nimport { SettingOutlined, DownloadOutlined } from '@ant-design/icons';\n\nimport './dashboard.scss';\nimport { AddItemForm } from '../../components/add-item-form/add-item-form';\nimport { SuppliersList } from '../../components/suppliers-list/suppliers-list';\nimport { SettingsModal } from '../../components/settings/settings';\n\nconst empty = <span className=\"dashboard__empty-cell\">В обработке...</span>;\nconst columns: ColumnsType<any> = [\n  {\n    title: 'Категория',\n    dataIndex: 'category',\n    key: 'category',\n    width: '18%',\n    className: 'dashboard__column--bold',\n  },\n  {\n    title: 'Номенклатура',\n    dataIndex: 'label',\n    key: 'label',\n    className: 'dashboard__column--bold',\n  },\n  {\n    title: 'Активных поставщиков',\n    dataIndex: 'activeSuppliers',\n    key: 'activeSuppliers',\n    width: '12%',\n    align: 'right',\n    className: 'dashboard__column--bold',\n    render: (sup, record) => record.label && (sup ?? empty),\n  },\n  {\n    title: 'Надежных поставщиков',\n    dataIndex: 'reliableSuppliers',\n    key: 'reliableSuppliers',\n    width: '12%',\n    align: 'right',\n    className: 'dashboard__column--bold',\n    render: (sup, record) => record.label && (sup ?? empty),\n  },\n  {\n    title: 'Поставщиков без проверки',\n    dataIndex: 'unverifiedSuppliers',\n    key: 'unverifiedSuppliers',\n    width: '12%',\n    align: 'right',\n    render: (sup, record) => record.label && (sup ?? empty),\n  },\n  {\n    title: 'Ненадежных поставщиков',\n    dataIndex: 'unreliableSupplier',\n    key: 'unreliableSupplier',\n    width: '12%',\n    align: 'right',\n    render: (sup, record) => record.label && (sup ?? empty),\n  },\n];\n\nfunction download(filename: string, text: string = '') {\n  var element = document.createElement('a');\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nexport const DashboardPage: FC = () => {\n  const fetchItemsRequest = useFetch(getItems);\n  const searchItemRequest = useFetch(searchItem);\n  const fetchSuppliersRequest = useFetch(getSuppliersByItemId);\n\n  const [rawData, setRawData] = useState([]);\n  const [selectedItem, setSelectedItem] = useState('');\n  const [search, setSearch] = useState('');\n  const [data, setData] = useState([]);\n  const [suppliers, setSuppliers] = useState([]);\n  const [isSuppliersListVisible, setIsSuppliersListVisible] = useState(false);\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n\n  const formatItemsResponse = useCallback(\n    (response) => {\n      if (!response || !response.categories) {\n        setData([]);\n        setRawData([]);\n        return;\n      }\n\n      const { categories } = response;\n\n      const dataItems = categories.reduce((acc: any, category: any) => {\n        const categoryItems = category.items.map((item: any) => ({ ...item, key: item.id, category: category.title }));\n        const categoryRowItem = {\n          key: `${category.id}-category`,\n          label: '',\n          category: category.title,\n          children: categoryItems,\n        };\n\n        acc.push(categoryRowItem);\n        return acc;\n      }, []);\n\n      setRawData(categories);\n      setData(dataItems);\n    },\n    [setData, setRawData]\n  );\n\n  useEffect(() => {\n    fetchItemsRequest.fetch().then(formatItemsResponse);\n    // eslint-disable-next-line\n  }, []);\n\n  const handleRowItemClick = useCallback(\n    (id: any) => {\n      setIsSuppliersListVisible(true);\n      fetchSuppliersRequest.fetch({ id }).then((res) => {\n        setSuppliers(res);\n      });\n    },\n    [setSuppliers, fetchSuppliersRequest]\n  );\n  const handleSuppliersListClose = useCallback(() => {\n    setIsSuppliersListVisible(false);\n  }, [setIsSuppliersListVisible]);\n\n  const handleAddItemSubmit = useCallback(\n    (search: string) => {\n      if (!search) return;\n\n      searchItemRequest.fetch({ search }).then((res) => {\n        formatItemsResponse(res);\n      });\n    },\n    [searchItemRequest, formatItemsResponse]\n  );\n  const handleItemSelect = useCallback(\n    (item) => {\n      setSelectedItem(item || '');\n    },\n    [setSelectedItem]\n  );\n  const openSettingsModal = useCallback(() => {\n    setIsSettingsVisible(true);\n  }, [setIsSettingsVisible]);\n  const handleSettingsModalClose = useCallback(() => {\n    setIsSettingsVisible(false);\n  }, [setIsSettingsVisible]);\n\n  const filteredData = useMemo(() => {\n    if (!selectedItem) return data;\n\n    const item = data.find(({ children }: any) => children.find(({ label }: any) => label === selectedItem));\n    return [item];\n  }, [selectedItem, data]);\n\n  const handleAddItem = useCallback(\n    (search: string) => {\n      setSearch(search);\n      openSettingsModal();\n    },\n    [setSearch, openSettingsModal]\n  );\n\n  const onSelectChange = useCallback(\n    (selectedRowKeys: any) => {\n      setSelectedRowKeys(selectedRowKeys);\n    },\n    [setSelectedRowKeys]\n  );\n  const downloadSuppliers = useCallback(() => {\n    download('data.xlsx');\n  }, []);\n\n  const footer = useCallback(\n    () => (\n      <Space>\n        <div>Выгрузить данные по поставщикам</div>\n        <Button size=\"middle\" type=\"primary\" icon={<DownloadOutlined />} onClick={downloadSuppliers}>\n          Загрузить\n        </Button>\n      </Space>\n    ),\n    [downloadSuppliers]\n  );\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard__form-wrapper\">\n        <AddItemForm\n          onAdd={handleAddItem}\n          onSelect={handleItemSelect}\n          options={rawData}\n          loading={searchItemRequest.isLoading}\n        />\n        <Button\n          className=\"dashboard__settings-button\"\n          type=\"primary\"\n          icon={<SettingOutlined />}\n          onClick={openSettingsModal}\n        >\n          Настройки\n        </Button>\n      </div>\n      <SettingsModal\n        visible={isSettingsVisible}\n        onClose={handleSettingsModalClose}\n        onSubmit={handleAddItemSubmit}\n        search={search}\n      />\n\n      <Table\n        columns={columns}\n        dataSource={filteredData}\n        pagination={{ position: [] }}\n        scroll={{ y: '75vh' }}\n        bordered\n        size=\"small\"\n        loading={fetchItemsRequest.isLoading || searchItemRequest.isLoading}\n        rowClassName={(record) => (!record.label ? 'dashboard__row--category' : '')}\n        onRow={(record, rowIndex) => ({\n          onClick: () => {\n            if (record.label) {\n              handleRowItemClick(record.id);\n            }\n          },\n        })}\n        expandable={{\n          defaultExpandAllRows: true,\n          showExpandColumn: true,\n          expandRowByClick: true,\n          rowExpandable: (record) => !record.label,\n        }}\n        rowSelection={{ selectedRowKeys, onChange: onSelectChange, checkStrictly: false }}\n        footer={selectedRowKeys.length ? footer : undefined}\n        className=\"dashboard__table\"\n      />\n\n      <SuppliersList\n        visible={isSuppliersListVisible}\n        onClose={handleSuppliersListClose}\n        suppliers={suppliers}\n        loading={fetchSuppliersRequest.isLoading}\n      />\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport { BaseLayout } from './components/base-layout/base-layout';\nimport { DashboardPage } from './pages/Dashboard/Dashboard';\n\nexport const App: FC = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<BaseLayout />}>\n        <Route index element={<DashboardPage />} />\n      </Route>\n    </Routes>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConfigProvider } from 'antd';\nimport ruRU from 'antd/lib/locale/ru_RU';\n\nimport './assets/styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ConfigProvider locale={ruRU}>\n        <App />\n      </ConfigProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}