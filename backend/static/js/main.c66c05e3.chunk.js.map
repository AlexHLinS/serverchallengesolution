{"version":3,"sources":["components/header/header.tsx","components/base-layout/base-layout.tsx","api/client.ts","api/api.ts","hooks/useFetch.ts","components/add-item-form/add-item-form.tsx","components/suppliers-list/suppliers-list.tsx","components/settings/settings.tsx","components/statistic/statistic.tsx","pages/Dashboard/Dashboard.tsx","App.tsx","index.tsx"],"names":["Header","className","BaseLayout","axiosInstance","axios","create","baseURL","timeout","client","get","delete","post","put","patch","request","getItems","searchItem","search","params","getSuppliersByItemId","id","item","then","res","data","reduce","acc","supplier","find","s","inn","getStatistic","useFetch","fetchMethod","initialParams","forceStart","useState","updateParams","isLoading","setIsLoading","setData","hasError","setHasError","isDone","setIsDone","errorMessage","setErrorMessage","refetchIndex","setRefetchIndex","refetch","prevRefetchIndex","fetch","useCallback","restParams","response","status","catch","err","message","finally","useEffect","AddItemForm","onAdd","onSelect","options","loading","validOptions","setValidOptions","setSearch","newOptions","category","title","children","items","map","count","label","activeSuppliers","value","style","display","justifyContent","catOption","handleChange","select","handleClear","handleSearch","handleAdd","notFoundContent","useMemo","icon","PlusOutlined","onClick","dropdownClassName","onClear","onSearch","filterOption","inputValue","option","toLowerCase","includes","placeholder","allowClear","Option","Select","SuppliersList","memo","onClose","visible","suppliers","filter","setFilter","type","setType","uniqueSuppliers","filteredSuppliers","handleChangeFIlter","handleTypeChange","e","target","checked","placement","width","onChange","length","image","Empty","PRESENTED_IMAGE_SIMPLE","index","key","SupplierCard","name","contacts","capitalization","created_at","debet","credit","rest","date","Date","parseInt","toLocaleDateString","console","log","getReviews","query","window","open","color","size","Panel","Collapse","SettingsModal","onSubmit","_search","handleClose","searchModule","Item","tooltip","wrapperCol","span","labelCol","min","valuePropName","scoringModule","onCancel","footer","onFinish","layout","labelWrap","labelAlign","requiredMark","required","direction","onInput","accept","UploadOutlined","ghost","expandIconPosition","defaultActiveKey","header","noStyle","htmlType","Statistic","onCLose","statRequest","statData","setStatData","gutter","items_count","valueStyle","urls_count","direct_suppliers","markeplaces","trash_urls","suppliers_active","backgroundColor","columns","dataIndex","align","dataSource","pagination","position","bordered","empty","render","sup","record","DashboardPage","fetchItemsRequest","searchItemRequest","fetchSuppliersRequest","rawData","setRawData","selectedItem","setSelectedItem","setSuppliers","isSuppliersListVisible","setIsSuppliersListVisible","isSettingsVisible","setIsSettingsVisible","isStatisticVisible","setIsStatisticVisible","selectedRowKeys","setSelectedRowKeys","expandedRowKeys","setExpandedRowKeys","formatItemsResponse","categories","dataItems","categoryItems","categoryRowItem","push","fillDataItems","ids","interval","setInterval","currentId","undefined","statistic","supp","unreliableSupplier","reliableSuppliers","unverifiedSuppliers","oldData","newChilds","accItems","clearInterval","handleRowItemClick","handleSuppliersListClose","handleAddItemSubmit","handleItemSelect","openSettingsModal","handleSettingsModalClose","filteredData","handleAddItem","onSelectChange","downloadSuppliers","filename","text","element","document","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","download","openStatisticMenu","closeStatisticMenu","DownloadOutlined","handleExpand","expanded","newExpanded","SettingOutlined","BarChartOutlined","scroll","y","rowClassName","onRow","rowIndex","expandable","expandRowByClick","rowExpandable","onExpand","rowSelection","checkStrictly","App","path","ReactDOM","StrictMode","locale","ruRU","getElementById"],"mappings":"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","file":"static/js/main.c66c05e3.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport './header.scss';\n\nexport const Header: FC = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"header__logo\"></div>\n      <div className=\"header__label\">Поиск поставщиков</div>\n\n      {/* <div className=\"header__nav\"></div> */}\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Header } from '../header/header';\n\nimport './base-layout.scss';\n\nexport const BaseLayout: FC = () => {\n  return (\n    <div className=\"base-layout\">\n      <Header />\n      <div className=\"base-layout__main\">\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst timeout = 600000;\nconst axiosInstance = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' ? '/api' : 'http://93.157.254.203:7778/api',\n  timeout,\n});\n\n// const defaultErrorInterceptor = (error) => Promise.reject(error);\n// const defaultRequestInterceptor = (config) => config;\n// const defaultResponseInterceptor = (response) => response;\n\nexport function setHeader(key: string, value: string) {\n  axiosInstance.defaults.headers.common[key] = value;\n}\n\nexport function unsetHeader(key: string) {\n  delete axiosInstance.defaults.headers.common[key];\n}\n\n// export function addRequestInterceptor({ request, error }) {\n//   const interceptor = axiosInstance.interceptors.request.use(\n//     request || defaultRequestInterceptor,\n//     error || defaultErrorInterceptor\n//   );\n//   return () => {\n//     axiosInstance.interceptors.request.eject(interceptor);\n//   };\n// }\n\n// export function addResponseInterceptor({ response, error }) {\n//   const interceptor = axiosInstance.interceptors.response.use(\n//     response || defaultResponseInterceptor,\n//     error || defaultErrorInterceptor\n//   );\n//   return () => {\n//     axiosInstance.interceptors.response.eject(interceptor);\n//   };\n// }\n\n// const get = (url, config) => {\n//   return axiosInstance.get(url, config).then((response) => response.data);\n// };\n\nconst client = {\n  get: axiosInstance.get,\n  delete: axiosInstance.delete,\n  post: axiosInstance.post,\n  put: axiosInstance.put,\n  patch: axiosInstance.patch,\n  request: axiosInstance.request,\n};\n\nexport default client;\n","import client from './client';\n\nexport function getItems() {\n  return client.get('/items');\n}\n\nexport function searchItem({ search }: { search: string }) {\n  return client.get('/item', { params: { search } });\n}\n\nexport function getSuppliersByItemId({ id }: { id: number }) {\n  return client.get('/suppliers', { params: { item: id } }).then((res) => {\n    const suppliers = res.data;\n\n    return {\n      data: suppliers.reduce((acc: any, supplier: any) => {\n        if (acc.find((s: any) => s.inn === supplier.inn)) return acc;\n\n        return [...acc, supplier];\n      }, []),\n    };\n  });\n}\n\nexport function getStatistic() {\n  return client.get('/statistics');\n}\n","import { useState, useEffect, useCallback } from 'react';\n\nconst useFetch = <T>(\n  fetchMethod: (params: any) => Promise<any>,\n  initialParams: Record<string, any> = {},\n  forceStart = false\n) => {\n  const [params, updateParams] = useState(initialParams);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState<T>();\n  const [hasError, setHasError] = useState(false);\n  const [isDone, setIsDone] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [refetchIndex, setRefetchIndex] = useState(0);\n\n  const refetch = () => setRefetchIndex((prevRefetchIndex) => prevRefetchIndex + 1);\n\n  const fetch = useCallback(\n    (restParams = {}) => {\n      setIsLoading(true);\n\n      return fetchMethod({ ...params, ...restParams })\n        .then((response) => {\n          if (response.status === 200) {\n            setData(response.data);\n          } else {\n            setHasError(true);\n            setErrorMessage(response.data);\n          }\n          return response.data;\n        })\n        .catch((err) => {\n          setHasError(true);\n          setErrorMessage(err?.message);\n        })\n        .finally(() => {\n          setIsLoading(false);\n          setIsDone(true);\n        });\n    },\n    [setIsLoading, fetchMethod, params, setData, setHasError, setErrorMessage]\n  );\n\n  useEffect(() => {\n    if (!forceStart) {\n      return;\n    }\n\n    fetch();\n  }, [fetch, forceStart, refetchIndex]);\n\n  return { fetch, data, isLoading, isDone, hasError, errorMessage, updateParams, refetch };\n};\n\nexport default useFetch;\n","import { Button, AutoComplete, Cascader, Input } from 'antd';\nimport { SearchOutlined, PlusOutlined, UserOutlined } from '@ant-design/icons';\nimport React, { FC, useCallback, useEffect, useMemo, useState } from 'react';\nimport './add-item-form.scss';\n\nconst renderTitle = (title: string) => <span>{title}</span>;\nconst renderItem = (title: string, count?: number | null) => ({\n  value: title,\n  label: (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n      }}\n    >\n      {title}\n      {count && <span>Поставщиков {count}</span>}\n    </div>\n  ),\n});\n\ntype Props = {\n  onAdd: (search: string) => void;\n  onSelect: (item: any) => void;\n  loading?: boolean;\n  options: any[];\n};\nexport const AddItemForm: FC<Props> = ({ onAdd, onSelect, options, loading = false }) => {\n  const [validOptions, setValidOptions] = useState<any[]>([]);\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    const newOptions = options.reduce((acc, category) => {\n      const children = category.items.map(({ id, label, activeSuppliers }: any) => ({\n        ...renderItem(label, activeSuppliers),\n      }));\n      const catOption = {\n        value: category.title,\n        title: category.title,\n        label: renderTitle(category.title),\n        options: children,\n      };\n\n      return [...acc, catOption];\n    }, []);\n\n    setValidOptions(newOptions);\n  }, [options, setValidOptions]);\n\n  const handleChange = useCallback(\n    (select: any) => {\n      onSelect(select);\n    },\n    [onSelect]\n  );\n  const handleClear = useCallback(() => {\n    onSelect('');\n  }, [onSelect]);\n  const handleSearch = useCallback(\n    (value) => {\n      setSearch(value);\n    },\n    [setSearch]\n  );\n  const handleAdd = useCallback(() => {\n    onAdd(search);\n  }, [onAdd, search]);\n  const notFoundContent = useMemo(\n    () => (\n      <div className=\"add-item-form__empty\">\n        <span className=\"add-item-form__empty-text\">Не найдено</span>\n        <Button icon={<PlusOutlined />} onClick={handleAdd} className=\"add-item-form__button\" loading={loading}>\n          Добавить номенклатуру\n        </Button>\n      </div>\n    ),\n    [handleAdd, loading]\n  );\n\n  return (\n    <div className=\"add-item-form\">\n      <AutoComplete\n        className=\"add-item-form__search\"\n        dropdownClassName=\"add-item-form__search-dropdown\"\n        options={validOptions}\n        onClear={handleClear}\n        onSelect={handleChange}\n        onSearch={handleSearch}\n        filterOption={(inputValue, option) => option!.value.toLowerCase().includes(inputValue.toLowerCase())}\n        notFoundContent={notFoundContent}\n        placeholder=\"Поиск по названию номенклатуры\"\n        allowClear\n      />\n    </div>\n  );\n};\n","import React, { FC, memo, useCallback, useMemo, useState } from 'react';\nimport { Button, Checkbox, Drawer, Empty, Select, Space, Spin, Tag } from 'antd';\nimport './suppliers-list.scss';\n\nconst { Option } = Select;\n\ntype Props = {\n  visible: boolean;\n  onClose: () => void;\n  suppliers?: any;\n  loading?: boolean;\n};\nexport const SuppliersList: FC<Props> = memo(({ onClose, visible, suppliers, loading }) => {\n  const [filter, setFilter] = useState('');\n  const [type, setType] = useState('');\n\n  const uniqueSuppliers = useMemo(() => {\n    return suppliers.reduce((acc: any, supplier: any) => {\n      if (acc.find((s: any) => s.inn === supplier.inn)) return acc;\n\n      return [...acc, supplier];\n    }, []);\n  }, [suppliers]);\n  const filteredSuppliers = useMemo(() => {\n    if (!filter && !type) return uniqueSuppliers;\n\n    return uniqueSuppliers;\n  }, [uniqueSuppliers, filter, type]);\n\n  const handleChangeFIlter = useCallback(\n    (value) => {\n      setFilter(value);\n    },\n    [setFilter]\n  );\n  const handleTypeChange = useCallback(\n    (e) => {\n      setType(e.target.checked ? 'direct' : '');\n    },\n    [setType]\n  );\n\n  return (\n    <Drawer title=\"Поставщики\" placement=\"right\" onClose={onClose} visible={visible} width=\"30vw\">\n      {loading && <Spin />}\n\n      <div className=\"suppliers-list__filter\">\n        <div className=\"suppliers-list__row\">\n          <Select placeholder=\"Учредитель..\" className=\"suppliers-list__select\" allowClear>\n            <Option value=\"rus\">Российский</Option>\n            <Option value=\"out\">Зарубежный</Option>\n          </Select>\n\n          <Select\n            onChange={handleChangeFIlter}\n            placeholder=\"Сортировать по..\"\n            className=\"suppliers-list__select\"\n            allowClear\n          >\n            <Option value=\"reliability\">Сперва надежные</Option>\n          </Select>\n        </div>\n\n        <Checkbox onChange={handleTypeChange}>Только прямые поставщики</Checkbox>\n      </div>\n\n      {!loading && (\n        <>\n          {!suppliers.length && <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />}\n\n          {filteredSuppliers.map((supplier: any, index: number) => (\n            <SupplierCard {...supplier} key={index} />\n          ))}\n        </>\n      )}\n    </Drawer>\n  );\n});\n\nconst SupplierCard: FC = ({ name, inn, contacts, status, capitalization, created_at, debet, credit, ...rest }: any) => {\n  const date = useMemo(() => new Date(parseInt(created_at)).toLocaleDateString(), [created_at]);\n\n  console.log(rest);\n\n  const getReviews = useCallback(() => {\n    const query = `${name} ИНН ${inn} отзывы`;\n    window.open(`https://yandex.ru/search/?text=${query}`, '_blank');\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"supplier\">\n      <div className=\"supplier__status\">\n        {status === 'ACTIVE' && <Tag color=\"green\">Действующая</Tag>}\n        {status === 'LIQUIDATING' && <Tag color=\"volcano\">Ликвидируется</Tag>}\n        {status === 'LIQUIDATED' && <Tag color=\"volcano\">Ликвидирована</Tag>}\n        {status === 'BANKRUPT' && <Tag color=\"volcano\">Банкротство</Tag>}\n        {status === 'REORGANIZING' && <Tag color=\"volcano\">Реорганизация</Tag>}\n      </div>\n\n      {name && <div className=\"supplier__name\">{name}</div>}\n      {inn && (\n        <div className=\"supplier__row\">\n          <div className=\"supplier__label\">ИНН:</div>\n          <div className=\"supplier__value\">{inn}</div>\n        </div>\n      )}\n\n      {created_at && (\n        <div className=\"supplier__row\">\n          <div className=\"supplier__label\">Дата создания:</div>\n          <div className=\"supplier__value\">{date}</div>\n        </div>\n      )}\n\n      {contacts && (\n        <div className=\"supplier__row\">\n          <div className=\"supplier__label\">Контакты:</div>\n          <div className=\"supplier__value\">{contacts}</div>\n        </div>\n      )}\n\n      {capitalization && (\n        <div className=\"supplier__row\">\n          <div className=\"supplier__label\">Капитализация:</div>\n          <div className=\"supplier__value\">{capitalization}</div>\n        </div>\n      )}\n      {debet && (\n        <div className=\"supplier__row\">\n          <div className=\"supplier__label\">Дебиторская задолженность:</div>\n          <div className=\"supplier__value\">{debet}</div>\n        </div>\n      )}\n      {credit && (\n        <div className=\"supplier__row\">\n          <div className=\"supplier__label\">Кредиторская задолженность:</div>\n          <div className=\"supplier__value\">{credit}</div>\n        </div>\n      )}\n\n      <Button type=\"link\" size=\"small\" onClick={getReviews} className=\"supplier__reviews\">\n        Смотреть отзывы\n      </Button>\n    </div>\n  );\n};\n","import React, { FC, memo, useEffect, useMemo, useState } from 'react';\nimport { Space, Button, Collapse, Form, Modal, Checkbox, Input, InputNumber, Upload } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport './settings.scss';\n\nconst { Panel } = Collapse;\n\ntype Props = {\n  visible?: boolean;\n  search?: string;\n  onClose?: () => void;\n  onSubmit?: (search: string) => void;\n};\nexport const SettingsModal: FC<Props> = memo(({ search, visible, onClose, onSubmit }) => {\n  const [_search, setSearch] = useState(search);\n  const handleInput = (e: any) => setSearch(e.target.value);\n  useEffect(() => {\n    setSearch(search);\n  }, [search, setSearch]);\n\n  const handleSave = () => {\n    if (!_search) return;\n    onSubmit && onSubmit(_search);\n    handleClose();\n  };\n  const handleReset = () => {\n    onClose && onClose();\n  };\n  const handleClose = () => {\n    onClose && onClose();\n  };\n\n  const searchModule = useMemo(\n    () => (\n      <>\n        <Form.Item label=\"Адрес объекта\" tooltip=\"Искать поставщиков для объекта по адресу\" wrapperCol={{ span: 10 }}>\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Мин. количество поставщиков\" tooltip=\"Влияет на скорость поиска\" labelCol={{ span: 17 }}>\n          <InputNumber min={0} />\n        </Form.Item>\n        <Form.Item\n          label=\"Мин. количество «надёжных» поставщиков\"\n          tooltip=\"Влияет на скорость поиска\"\n          labelCol={{ span: 17 }}\n        >\n          <InputNumber min={0} />\n        </Form.Item>\n        <Form.Item valuePropName=\"checked\">\n          <Checkbox>Искать только действующих поставщиков</Checkbox>\n        </Form.Item>\n        <Form.Item valuePropName=\"checked\" className=\"settings__checkbox\">\n          <Checkbox>Искать только производителей</Checkbox>\n        </Form.Item>\n      </>\n    ),\n    []\n  );\n  const scoringModule = useMemo(\n    () => (\n      <>\n        <Form.Item label=\"Уставной капитал, не менее\" labelCol={{ span: 12 }}>\n          <InputNumber min={0} />\n        </Form.Item>\n        <Form.Item label=\"Лет работы, не менее\" labelCol={{ span: 12 }}>\n          <InputNumber min={0} />\n        </Form.Item>\n      </>\n    ),\n    []\n  );\n\n  return (\n    <Modal title=\"Настройки поиска поставщиков\" visible={visible} onCancel={handleClose} footer={null}>\n      <Form onFinish={handleSave} layout=\"horizontal\" labelWrap size=\"small\" labelAlign=\"left\" requiredMark={false}>\n        <Form.Item label=\"Номенклатура\" name=\"search\" required>\n          <Space direction=\"vertical\" style={{ width: '100%' }}>\n            <Input placeholder=\"Номенклатура для поиска\" name=\"search\" value={_search} onInput={handleInput} />\n            <Upload accept=\".xsl,.xlsx,.csv\">\n              или <Button icon={<UploadOutlined />}>Загрузить в формате xls, csv</Button>\n            </Upload>\n          </Space>\n        </Form.Item>\n\n        <Collapse ghost className=\"settings\" expandIconPosition=\"left\" defaultActiveKey={['1', '2']}>\n          <Panel header=\"Модуль поиска\" key=\"1\">\n            {searchModule}\n          </Panel>\n          <Panel header=\"Модуль скоринга «надёжного» поставщика\" key=\"2\">\n            {scoringModule}\n          </Panel>\n          {/* <Panel header=\"Технические настройки\" key=\"3\"></Panel> */}\n        </Collapse>\n\n        <Form.Item noStyle>\n          <Space className=\"settings__footer\">\n            <Button size=\"middle\" onClick={handleReset} type=\"ghost\" htmlType=\"reset\">\n              Сбросить\n            </Button>\n            <Button size=\"middle\" type=\"primary\" htmlType=\"submit\">\n              Добавить\n            </Button>\n          </Space>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n});\n","import { Card, Col, Divider, Modal, Row, Space, Statistic as StatisticBlock, Table } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport React, { FC, useEffect, useState } from 'react';\nimport { getStatistic } from '../../api/api';\nimport useFetch from '../../hooks/useFetch';\nimport { PieChart } from 'react-minimal-pie-chart';\n\nimport './statistic.scss';\n\ntype Props = {\n  visible: boolean;\n  onCLose: () => void;\n};\nexport const Statistic: FC<Props> = ({ visible, onCLose }) => {\n  const statRequest = useFetch(getStatistic);\n  const [statData, setStatData] = useState<any>({});\n\n  useEffect(() => {\n    if (visible)\n      statRequest.fetch().then((res) => {\n        console.log(res);\n        setStatData(res);\n      });\n    // eslint-disable-next-line\n  }, [visible]);\n\n  const columns: ColumnsType<any> = [\n    {\n      title: 'Категория',\n      dataIndex: 'title',\n    },\n    {\n      title: 'Надежных поставщиков',\n      dataIndex: 'suppliers',\n      width: '10%',\n      align: 'center',\n    },\n  ];\n\n  const data = [\n    { key: 1, title: 'Болты', suppliers: 1 },\n    { key: 2, title: 'Манжеты', suppliers: 3 },\n  ];\n\n  return (\n    <Modal\n      title=\"Статистика по всем категориям\"\n      visible={visible}\n      onCancel={onCLose}\n      footer={null}\n      width={'50vw'}\n      className=\"statistic\"\n    >\n      <Space direction=\"vertical\" size={12}>\n        <Row gutter={12}>\n          <Col span={12}>\n            <Card>\n              <StatisticBlock\n                title=\"Номенклатурных позиций в базе\"\n                loading={statRequest.isLoading}\n                value={statData?.items_count || '-'}\n                valueStyle={{ color: '#389e0d' }}\n              />\n            </Card>\n          </Col>\n          <Col span={12}>\n            <Card>\n              <StatisticBlock\n                title=\"Найдено URL по номенклатурам\"\n                loading={statRequest.isLoading}\n                value={statData?.urls_count || '-'}\n              />\n            </Card>\n          </Col>\n        </Row>\n        <Row gutter={12}>\n          <Col span={8}>\n            <Card>\n              <StatisticBlock\n                title=\"Сайтов поставщиков\"\n                loading={statRequest.isLoading}\n                value={statData?.direct_suppliers || '-'}\n              />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card>\n              <StatisticBlock\n                title=\"Площадок / маркетплейсов\"\n                loading={statRequest.isLoading}\n                value={statData?.markeplaces || '-'}\n              />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card>\n              <StatisticBlock\n                title=\"Нерелевантных сайтов\"\n                loading={statRequest.isLoading}\n                value={statData?.trash_urls || '-'}\n                valueStyle={{ color: '#cf1322' }}\n              />\n            </Card>\n          </Col>\n        </Row>\n        <Row gutter={12}>\n          <Col span={8}>\n            <Card>\n              <StatisticBlock\n                title=\"Поставщиков найдено\"\n                loading={statRequest.isLoading}\n                value={statData?.suppliers || '-'}\n                valueStyle={{ color: '#389e0d' }}\n              />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card>\n              <StatisticBlock\n                title=\"Надежных поставщиков\"\n                loading={statRequest.isLoading}\n                value={statData?.suppliers_active || '-'}\n                valueStyle={{ color: '#389e0d' }}\n              />\n            </Card>\n          </Col>\n        </Row>\n\n        <div className=\"statistic__chart\">\n          <PieChart\n            data={[\n              { title: 'Активных поставщиков', value: statData?.suppliers_active || 0, color: '#E38627' },\n              {\n                title: 'В процессе ликвидации / ликвидированные',\n                value: statData?.suppliers - statData?.suppliers_active || 0,\n                color: '#C13C37',\n              },\n            ]}\n          />\n\n          <div>\n            <div className=\"statistic__chart-legend\">\n              <div className=\"statistic__round\" style={{ backgroundColor: '#E38627' }}></div>Активных поставщиков\n            </div>\n            <div className=\"statistic__chart-legend\">\n              <div className=\"statistic__round\" style={{ backgroundColor: '#C13C37' }}></div>В процессе ликвидации /\n              ликвидированные\n            </div>\n          </div>\n        </div>\n\n        <div className=\"statistic__table-header\">Категории с низкой долей «надёжных» поставщиков</div>\n        <Table\n          columns={columns}\n          dataSource={data}\n          pagination={{ position: [] }}\n          bordered\n          loading={statRequest.isLoading}\n        />\n      </Space>\n    </Modal>\n  );\n};\n","import React, { FC, useCallback, useEffect, useMemo, useState } from 'react';\nimport { getItems, getSuppliersByItemId, searchItem } from '../../api/api';\nimport useFetch from '../../hooks/useFetch';\n\nimport { Button, Space, Table } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\n// import { DownOutlined } from '@ant-design/icons';\nimport { SettingOutlined, DownloadOutlined, BarChartOutlined } from '@ant-design/icons';\n\nimport './dashboard.scss';\nimport { AddItemForm } from '../../components/add-item-form/add-item-form';\nimport { SuppliersList } from '../../components/suppliers-list/suppliers-list';\nimport { SettingsModal } from '../../components/settings/settings';\nimport { Statistic } from '../../components/statistic/statistic';\n\nconst empty = <span className=\"dashboard__empty-cell\">В обработке...</span>;\nconst columns: ColumnsType<any> = [\n  {\n    title: 'Категория',\n    dataIndex: 'category',\n    key: 'category',\n    width: '18%',\n    className: 'dashboard__column--bold',\n  },\n  {\n    title: 'Номенклатура',\n    dataIndex: 'label',\n    key: 'label',\n    className: 'dashboard__column--bold',\n  },\n  {\n    title: 'Активных поставщиков',\n    dataIndex: 'activeSuppliers',\n    key: 'activeSuppliers',\n    width: '12%',\n    align: 'right',\n    className: 'dashboard__column--bold',\n    render: (sup, record) => record.label && (sup ?? empty),\n  },\n  {\n    title: 'Надежных поставщиков',\n    dataIndex: 'reliableSuppliers',\n    key: 'reliableSuppliers',\n    width: '12%',\n    align: 'right',\n    className: 'dashboard__column--bold',\n    render: (sup, record) => record.label && (sup ?? empty),\n  },\n  {\n    title: 'Поставщиков без проверки',\n    dataIndex: 'unverifiedSuppliers',\n    key: 'unverifiedSuppliers',\n    width: '12%',\n    align: 'right',\n    render: (sup, record) => record.label && (sup ?? empty),\n  },\n  {\n    title: 'Ненадежных поставщиков',\n    dataIndex: 'unreliableSupplier',\n    key: 'unreliableSupplier',\n    width: '12%',\n    align: 'right',\n    render: (sup, record) => record.label && (sup ?? empty),\n  },\n];\n\nfunction download(filename: string, text: string = '') {\n  var element = document.createElement('a');\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nexport const DashboardPage: FC = () => {\n  const fetchItemsRequest = useFetch(getItems);\n  const searchItemRequest = useFetch(searchItem);\n  const fetchSuppliersRequest = useFetch(getSuppliersByItemId);\n\n  const [rawData, setRawData] = useState([]);\n  const [selectedItem, setSelectedItem] = useState('');\n  const [search, setSearch] = useState('');\n  const [data, setData] = useState([]);\n  const [suppliers, setSuppliers] = useState([]);\n  const [isSuppliersListVisible, setIsSuppliersListVisible] = useState(false);\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  const [isStatisticVisible, setIsStatisticVisible] = useState(false);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [expandedRowKeys, setExpandedRowKeys] = useState<any>([]);\n\n  const formatItemsResponse = useCallback(\n    (response) => {\n      if (!response || !response.categories) {\n        setData([]);\n        setRawData([]);\n        return;\n      }\n\n      const { categories } = response;\n\n      const dataItems = categories.reduce((acc: any, category: any) => {\n        const categoryItems = category.items.map((item: any) => ({ ...item, key: item.id, category: category.title }));\n        const categoryRowItem = {\n          key: `${category.id}-category`,\n          label: '',\n          category: category.title,\n          children: categoryItems,\n        };\n\n        acc.push(categoryRowItem);\n        return acc;\n      }, []);\n\n      setRawData(categories);\n      setData(dataItems);\n\n      fillDataItems(dataItems);\n    },\n    [setData, setRawData]\n  );\n\n  useEffect(() => {\n    fetchItemsRequest.fetch().then(formatItemsResponse);\n    // eslint-disable-next-line\n  }, []);\n\n  const fillDataItems = (dataItems: any) => {\n    try {\n      const ids = dataItems.reduce((acc: any, { children }: any) => [...acc, ...children.map(({ id }: any) => id)], []);\n\n      if (ids.length === 0) return;\n\n      let index = 0;\n      const interval = setInterval(() => {\n        const currentId = ids[index++];\n        if (currentId === undefined) {\n          clearInterval(interval);\n          return;\n        }\n        getSuppliersByItemId({ id: currentId }).then((res) => {\n          const { data } = res;\n\n          let statistic = data.reduce(\n            (acc: any, supp: any) => {\n              if (supp.status === 'ACTIVE') return { ...acc, activeSuppliers: (acc.activeSuppliers || 0) + 1 };\n              if (supp.status !== 'ACTIVE') return { ...acc, unreliableSupplier: (acc.unreliableSupplier || 0) + 1 };\n              // if (supp.status === 'ACTIVE') return { ...acc, activeSuppliers: (acc.activeSuppliers || 0) + 1 };\n              // if (supp.status === 'ACTIVE') return { ...acc, activeSuppliers: (acc.activeSuppliers || 0) + 1 };\n            },\n            {\n              activeSuppliers: null,\n              reliableSuppliers: null,\n              unverifiedSuppliers: 0,\n              unreliableSupplier: null,\n            }\n          );\n\n          if (\n            statistic.reliableSuppliers === null &&\n            statistic.activeSuppliers !== null &&\n            statistic.unreliableSupplier !== null\n          ) {\n            statistic.reliableSuppliers = statistic.activeSuppliers - statistic.unreliableSupplier;\n          }\n\n          // if(statistic.unreliableSupplier === null && statistic.activeSuppliers !== null && statistic.)\n\n          setData((oldData: any) => {\n            const newData = oldData.reduce((acc: any, category: any) => {\n              const newChilds = category.children.reduce((accItems: any, item: any) => {\n                if (item.id === currentId) return [...accItems, { ...item, ...statistic }];\n                return [...accItems, item];\n              }, []);\n\n              return [...acc, { ...category, children: newChilds }];\n            }, []);\n\n            return newData;\n          });\n        });\n      }, 500);\n    } catch (e) {\n      console.log('some error');\n      console.log(e);\n    }\n  };\n\n  const handleRowItemClick = useCallback(\n    (id: any) => {\n      setIsSuppliersListVisible(true);\n      fetchSuppliersRequest.fetch({ id }).then((res) => {\n        setSuppliers(res);\n      });\n    },\n    [setSuppliers, fetchSuppliersRequest]\n  );\n  const handleSuppliersListClose = useCallback(() => {\n    setIsSuppliersListVisible(false);\n  }, [setIsSuppliersListVisible]);\n\n  const handleAddItemSubmit = useCallback(\n    (search: string) => {\n      if (!search) return;\n\n      searchItemRequest.fetch({ search }).then((res) => {\n        formatItemsResponse(res);\n      });\n    },\n    [searchItemRequest, formatItemsResponse]\n  );\n  const handleItemSelect = useCallback(\n    (item) => {\n      setSelectedItem(item || '');\n    },\n    [setSelectedItem]\n  );\n  const openSettingsModal = useCallback(() => {\n    setIsSettingsVisible(true);\n  }, [setIsSettingsVisible]);\n  const handleSettingsModalClose = useCallback(() => {\n    setIsSettingsVisible(false);\n  }, [setIsSettingsVisible]);\n\n  const filteredData = useMemo(() => {\n    if (!selectedItem) return data;\n\n    const item = data.find(({ children }: any) => children.find(({ label }: any) => label === selectedItem));\n    return [item];\n  }, [selectedItem, data]);\n\n  const handleAddItem = useCallback(\n    (search: string) => {\n      setSearch(search);\n      openSettingsModal();\n    },\n    [setSearch, openSettingsModal]\n  );\n\n  const onSelectChange = useCallback(\n    (selectedRowKeys: any) => {\n      setSelectedRowKeys(selectedRowKeys);\n    },\n    [setSelectedRowKeys]\n  );\n  const downloadSuppliers = useCallback(() => {\n    download('data.xlsx');\n  }, []);\n\n  const openStatisticMenu = useCallback(() => {\n    setIsStatisticVisible(true);\n  }, [setIsStatisticVisible]);\n  const closeStatisticMenu = useCallback(() => {\n    setIsStatisticVisible(false);\n  }, [setIsStatisticVisible]);\n\n  const footer = useCallback(\n    () => (\n      <Space>\n        <div>Выгрузить данные по поставщикам</div>\n        <Button size=\"middle\" type=\"primary\" icon={<DownloadOutlined />} onClick={downloadSuppliers}>\n          Загрузить\n        </Button>\n      </Space>\n    ),\n    [downloadSuppliers]\n  );\n\n  const handleExpand = useCallback(\n    (expanded, record) => {\n      const { key } = record;\n      const newExpanded = expanded ? [...expandedRowKeys, key] : expandedRowKeys.filter((s: any) => s !== key);\n      setExpandedRowKeys(newExpanded);\n    },\n    [setExpandedRowKeys, expandedRowKeys]\n  );\n\n  useEffect(() => {\n    setExpandedRowKeys(filteredData.map(({ key }: any) => key));\n  }, [filteredData]);\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard__form-wrapper\">\n        <AddItemForm\n          onAdd={handleAddItem}\n          onSelect={handleItemSelect}\n          options={rawData}\n          loading={searchItemRequest.isLoading}\n        />\n        <Button\n          className=\"dashboard__settings-button\"\n          type=\"primary\"\n          icon={<SettingOutlined />}\n          onClick={openSettingsModal}\n        >\n          Настройки\n        </Button>\n        <Button\n          className=\"dashboard__settings-button\"\n          type=\"primary\"\n          icon={<BarChartOutlined />}\n          onClick={openStatisticMenu}\n        >\n          Статистика\n        </Button>\n      </div>\n      <SettingsModal\n        visible={isSettingsVisible}\n        onClose={handleSettingsModalClose}\n        onSubmit={handleAddItemSubmit}\n        search={search}\n      />\n      <Statistic visible={isStatisticVisible} onCLose={closeStatisticMenu} />\n\n      <Table\n        columns={columns}\n        dataSource={filteredData}\n        pagination={false}\n        scroll={{ y: '75vh' }}\n        bordered\n        size=\"small\"\n        loading={fetchItemsRequest.isLoading || searchItemRequest.isLoading}\n        rowClassName={(record) => (!record.label ? 'dashboard__row--category' : '')}\n        onRow={(record, rowIndex) => ({\n          onClick: () => {\n            if (record.label) {\n              handleRowItemClick(record.id);\n            }\n          },\n        })}\n        expandable={{\n          expandRowByClick: true,\n          expandedRowKeys,\n          rowExpandable: (record) => !record.label,\n          onExpand: handleExpand,\n        }}\n        rowSelection={{ selectedRowKeys, onChange: onSelectChange, checkStrictly: false }}\n        footer={selectedRowKeys.length ? footer : undefined}\n        className=\"dashboard__table\"\n      />\n\n      <SuppliersList\n        visible={isSuppliersListVisible}\n        onClose={handleSuppliersListClose}\n        suppliers={suppliers}\n        loading={fetchSuppliersRequest.isLoading}\n      />\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport { BaseLayout } from './components/base-layout/base-layout';\nimport { DashboardPage } from './pages/Dashboard/Dashboard';\n\nexport const App: FC = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<BaseLayout />}>\n        <Route index element={<DashboardPage />} />\n      </Route>\n    </Routes>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConfigProvider } from 'antd';\nimport ruRU from 'antd/lib/locale/ru_RU';\n\nimport './assets/styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ConfigProvider locale={ruRU}>\n        <App />\n      </ConfigProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}